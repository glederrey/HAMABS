Starting optimization of LPMC_Nested_Full_S with LS and bfgs-inv at lun ao√ª 12 23:10:23 CEST 2019
Train LPMC_Nested_Full_S with LS and bfgs-inv
Traceback (most recent call last):
  File "LS_bfgs-inv.py", line 30, in <module>
    tmp = model.optimize(ioa, **{'verbose': False, 'nbr_epochs': 1000, 'batch': 1000})
  File "../../models/LPMC_Nested_Full.py", line 826, in optimize
    return algo.solve(maximize=True)
  File "../../algos/OptAlg.py", line 214, in solve
    xk_new = self.alg_type.update_xk(xk, fk, gk, Bk, f, fprime, self.dir, self.fs)
  File "../../algos/types/LineSearch.py", line 34, in update_xk
    alpha = self.compute_alpha(f, fprime, xk, direction, fs)
  File "../../algos/types/LineSearch.py", line 24, in compute_alpha
    alpha = ls_wolfe12(f, fprime, xk, direction, gk, fs[-1], old_old_fval)
  File "../../algos/types/helpers.py", line 17, in ls_wolfe12
    old_fval, old_old_fval)
  File "/ssoft/spack/paien/v2/opt/spack/linux-rhel7-x86_E5v4_Mellanox/gcc-7.3.0/python-3.6.5-fuxsuhr3v4fh4gdkw6xrvnctzn2meygg/lib/python3.6/site-packages/scipy/optimize/linesearch.py", line 101, in line_search_wolfe1
    c1=c1, c2=c2, amax=amax, amin=amin, xtol=xtol)
  File "/ssoft/spack/paien/v2/opt/spack/linux-rhel7-x86_E5v4_Mellanox/gcc-7.3.0/python-3.6.5-fuxsuhr3v4fh4gdkw6xrvnctzn2meygg/lib/python3.6/site-packages/scipy/optimize/linesearch.py", line 174, in scalar_search_wolfe1
    phi1 = phi(stp)
  File "/ssoft/spack/paien/v2/opt/spack/linux-rhel7-x86_E5v4_Mellanox/gcc-7.3.0/python-3.6.5-fuxsuhr3v4fh4gdkw6xrvnctzn2meygg/lib/python3.6/site-packages/scipy/optimize/linesearch.py", line 87, in phi
    return f(xk + s*pk, *args)
  File "../../algos/directions/BFGS_INV.py", line 38, in f
    return self.mult * self.f(x)
  File "../../algos/directions/Direction.py", line 15, in <lambda>
    self.f = lambda x: self.biogeme.calculateLikelihood(x)
  File "/home/glederre/pybio/lib/python3.6/site-packages/biogeme/biogeme.py", line 250, in calculateLikelihood
    f = self.theC.calculateLikelihood(x,self.fixedBetaValues)
  File "src/cbiogeme.pyx", line 93, in biogeme.cbiogeme.pyBiogeme.calculateLikelihood
RuntimeError: src/biogeme.cc:296: Biogeme exception: Error for data entry 6962 : src/bioExprElem.cc:66: Biogeme exception: Invalid value for expression <(exp(((((((((((((((((((((((((ASC_TRANSIT_NCO[4] <6962>*dl0[363] <6962>)+(ASC_TRANSIT_NCO[4] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((ASC_TRANSIT_CO[3] <6962>*dl0[363] <6962>)+(ASC_TRANSIT_CO[3] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((ASC_TRANSIT_CO[3] <6962>*dl0[363] <6962>)+(ASC_TRANSIT_CO[3] <6962>*dl1[364] <6962>))*co2[352] <6962>))+((((((B_COST_TRANSIT_NCO[26] <6962>*dl0[363] <6962>)+(B_COST_TRANSIT_NCO[26] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_COST_TRANSIT_CO1_DL0[157] <6962>*dl0[363] <6962>)+(B_COST_TRANSIT_CO1_DL1[158] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_COST_TRANSIT_CO2_DL0[159] <6962>*dl0[363] <6962>)+(B_COST_TRANSIT_CO2_DL1[160] <6962>*dl1[364] <6962>))*co2[352] <6962>))*cost_transit[310] <6962>))+((((((B_TIME_ACCESS_NCO_DL0[75] <6962>*dl0[363] <6962>)+(B_TIME_ACCESS_NCO_DL1[76] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_TIME_ACCESS_CO[74] <6962>*dl0[363] <6962>)+(B_TIME_ACCESS_CO[74] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_TIME_ACCESS_CO[74] <6962>*dl0[363] <6962>)+(B_TIME_ACCESS_CO[74] <6962>*dl1[364] <6962>))*co2[352] <6962>))*dur_access[320] <6962>))+((((((B_TIME_RAIL[89] <6962>*dl0[363] <6962>)+(B_TIME_RAIL[89] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_TIME_RAIL[89] <6962>*dl0[363] <6962>)+(B_TIME_RAIL[89] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_TIME_RAIL[89] <6962>*dl0[363] <6962>)+(B_TIME_RAIL[89] <6962>*dl1[364] <6962>))*co2[352] <6962>))*dur_pt_rail[323] <6962>))+((((((B_TIME_BUS_NCO1_DL0[79] <6962>*dl0[363] <6962>)+(B_TIME_BUS_NCO1_DL1[80] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_TIME_BUS_NCO1_DL0[79] <6962>*dl0[363] <6962>)+(B_TIME_BUS_NCO1_DL1[80] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_TIME_BUS_CO2_DL0[77] <6962>*dl0[363] <6962>)+(B_TIME_BUS_CO2_DL1[78] <6962>*dl1[364] <6962>))*co2[352] <6962>))*dur_pt_bus[324] <6962>))+((((((B_TIME_INT_WAIT_NCO[87] <6962>*dl0[363] <6962>)+(B_TIME_INT_WAIT_NCO[87] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_TIME_INT_WAIT_CO[86] <6962>*dl0[363] <6962>)+(B_TIME_INT_WAIT_CO[86] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_TIME_INT_WAIT_CO[86] <6962>*dl0[363] <6962>)+(B_TIME_INT_WAIT_CO[86] <6962>*dl1[364] <6962>))*co2[352] <6962>))*dur_interchange_waiting[321] <6962>))+((((((B_TIME_INT_WALK_NCO_DL0[276] <6962>*dl0[363] <6962>)+(B_TIME_INT_WALK_NCO_DL1[277] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_TIME_INT_WALK_CO1[88] <6962>*dl0[363] <6962>)+(B_TIME_INT_WALK_CO1[88] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_TIME_INT_WALK_CO2_DL0[274] <6962>*dl0[363] <6962>)+(B_TIME_INT_WALK_CO2_DL1[275] <6962>*dl1[364] <6962>))*co2[352] <6962>))*dur_interchange_walking[322] <6962>))+((((((B_PURPOSE_B_TRANSIT_NCO_DL0[209] <6962>*dl0[363] <6962>)+(B_PURPOSE_B_TRANSIT_NCO_DL1[210] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_PURPOSE_B_TRANSIT_CO_DL0[55] <6962>*dl0[363] <6962>)+(B_PURPOSE_B_TRANSIT_CO_DL1[56] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_PURPOSE_B_TRANSIT_CO_DL0[55] <6962>*dl0[363] <6962>)+(B_PURPOSE_B_TRANSIT_CO_DL1[56] <6962>*dl1[364] <6962>))*co2[352] <6962>))*purpose_B[342] <6962>))+((((((B_PURPOSE_HBW_TRANSIT_NCO_DL0[248] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBW_TRANSIT_NCO_DL1[249] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_PURPOSE_HBW_TRANSIT_CO1_DL0[246] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBW_TRANSIT_CO1_DL1[247] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_PURPOSE_HBW_TRANSIT_CO2_DL0[70] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBW_TRANSIT_CO2_DL1[71] <6962>*dl1[364] <6962>))*co2[352] <6962>))*purpose_HBW[328] <6962>))+((((((B_PURPOSE_HBE_TRANSIT_DL0[61] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBE_TRANSIT_NCO1_DL1[218] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_PURPOSE_HBE_TRANSIT_DL0[61] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBE_TRANSIT_NCO1_DL1[218] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_PURPOSE_HBE_TRANSIT_DL0[61] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBE_TRANSIT_CO2_DL1[60] <6962>*dl1[364] <6962>))*co2[352] <6962>))*purpose_HBE[326] <6962>))+((((((B_PURPOSE_HBO_TRANSIT_NCO_DL0[64] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBO_TRANSIT_NCO_DL1[236] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_PURPOSE_HBO_TRANSIT_CO1_DL0[232] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBO_TRANSIT_CO1_DL1[233] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_PURPOSE_HBO_TRANSIT_CO2_DL0[234] <6962>*dl0[363] <6962>)+(B_PURPOSE_HBO_TRANSIT_CO2_DL1[235] <6962>*dl1[364] <6962>))*co2[352] <6962>))*purpose_HBO[327] <6962>))+((((((B_FEMALE_TRANSIT_DL0[38] <6962>*dl0[363] <6962>)+(B_FEMALE_TRANSIT_DL1[39] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_FEMALE_TRANSIT_DL0[38] <6962>*dl0[363] <6962>)+(B_FEMALE_TRANSIT_DL1[39] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_FEMALE_TRANSIT_DL0[38] <6962>*dl0[363] <6962>)+(B_FEMALE_TRANSIT_DL1[39] <6962>*dl1[364] <6962>))*co2[352] <6962>))*female[318] <6962>))+((((((B_CHILD_TRANSIT_NCO_DL0[143] <6962>*dl0[363] <6962>)+(B_CHILD_TRANSIT_NCO_DL1[144] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_CHILD_TRANSIT_CO1_DL0[22] <6962>*dl0[363] <6962>)+(B_CHILD_TRANSIT_CO1_DL1[140] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_CHILD_TRANSIT_CO2_DL0[141] <6962>*dl0[363] <6962>)+(B_CHILD_TRANSIT_CO2_DL1[142] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.child[355] <6962>))+((((((B_CADULT_TRANSIT_NCO_DL0[16] <6962>*dl0[363] <6962>)+(B_CADULT_TRANSIT_NCO_DL1[17] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_CADULT_TRANSIT_CO1_DL0[122] <6962>*dl0[363] <6962>)+(B_CADULT_TRANSIT_CO1_DL1[123] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_CADULT_TRANSIT_CO2_DL0[124] <6962>*dl0[363] <6962>)+(B_CADULT_TRANSIT_CO2_DL1[125] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.cadult[356] <6962>))+((((((B_ADULT_TRANSIT_NCO[10] <6962>*dl0[363] <6962>)+(B_ADULT_TRANSIT_NCO[10] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_ADULT_TRANSIT_CO1_DL0[112] <6962>*dl0[363] <6962>)+(B_ADULT_TRANSIT_CO1_DL1[9] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_ADULT_TRANSIT_CO2_DL0[113] <6962>*dl0[363] <6962>)+(B_ADULT_TRANSIT_CO2_DL1[114] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.adult[357] <6962>))+((((((B_WEEKDAY_TRANSIT_NCO_DL0[280] <6962>*dl0[363] <6962>)+(B_WEEKDAY_TRANSIT_NCO_DL1[281] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_WEEKDAY_TRANSIT_CO[97] <6962>*dl0[363] <6962>)+(B_WEEKDAY_TRANSIT_CO[97] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_WEEKDAY_TRANSIT_CO[97] <6962>*dl0[363] <6962>)+(B_WEEKDAY_TRANSIT_CO[97] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.weekday[353] <6962>))+((((((B_SATURDAY_TRANSIT_NCO_DL0[261] <6962>*dl0[363] <6962>)+(B_SATURDAY_TRANSIT_NCO_DL1[262] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_SATURDAY_TRANSIT_CO[73] <6962>*dl0[363] <6962>)+(B_SATURDAY_TRANSIT_CO[73] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_SATURDAY_TRANSIT_CO[73] <6962>*dl0[363] <6962>)+(B_SATURDAY_TRANSIT_CO[73] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.saturday[354] <6962>))+((((((B_PM_PEAK_TRANSIT_NCO_DL0[197] <6962>*dl0[363] <6962>)+(B_PM_PEAK_TRANSIT_NCO_DL1[198] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_PM_PEAK_TRANSIT_CO[52] <6962>*dl0[363] <6962>)+(B_PM_PEAK_TRANSIT_CO[52] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_PM_PEAK_TRANSIT_CO[52] <6962>*dl0[363] <6962>)+(B_PM_PEAK_TRANSIT_CO[52] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.pmpeak[359] <6962>))+((((((B_DISTANCE_TRANSIT_NCO_DL0[35] <6962>*dl0[363] <6962>)+(B_DISTANCE_TRANSIT_DL1[34] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_DISTANCE_TRANSIT_CO_DL0[33] <6962>*dl0[363] <6962>)+(B_DISTANCE_TRANSIT_DL1[34] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_DISTANCE_TRANSIT_CO_DL0[33] <6962>*dl0[363] <6962>)+(B_DISTANCE_TRANSIT_DL1[34] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.distance_km[361] <6962>))+((((((B_LOGDISTANCE_TRANSIT_NCO[48] <6962>*dl0[363] <6962>)+(B_LOGDISTANCE_TRANSIT_NCO[48] <6962>*dl1[364] <6962>))*co0[350] <6962>)+(((B_LOGDISTANCE_TRANSIT_CO[47] <6962>*dl0[363] <6962>)+(B_LOGDISTANCE_TRANSIT_CO[47] <6962>*dl1[364] <6962>))*co1[351] <6962>))+(((B_LOGDISTANCE_TRANSIT_CO[47] <6962>*dl0[363] <6962>)+(B_LOGDISTANCE_TRANSIT_CO[47] <6962>*dl1[364] <6962>))*co2[352] <6962>))*self.logdistance[362] <6962>)))^MU_WALKTRANSIT[100] <6962>)>: inf
srun: error: h200: task 0: Exited with exit code 1
srun: Terminating job step 178408.0
Finished at lun ao√ª 12 23:10:58 CEST 2019
