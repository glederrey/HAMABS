Starting optimization of LPMC_Nested_Full_L with LS and grad at lun ao√ª 12 23:10:38 CEST 2019
Train LPMC_Nested_Full_L with LS and grad
Traceback (most recent call last):
  File "LS_grad.py", line 30, in <module>
    tmp = model.optimize(ioa, **{'verbose': False, 'nbr_epochs': 1000, 'batch': 1000})
  File "../../models/LPMC_Nested_Full.py", line 826, in optimize
    return algo.solve(maximize=True)
  File "../../algos/OptAlg.py", line 214, in solve
    xk_new = self.alg_type.update_xk(xk, fk, gk, Bk, f, fprime, self.dir, self.fs)
  File "../../algos/types/LineSearch.py", line 34, in update_xk
    alpha = self.compute_alpha(f, fprime, xk, direction, fs)
  File "../../algos/types/LineSearch.py", line 24, in compute_alpha
    alpha = ls_wolfe12(f, fprime, xk, direction, gk, fs[-1], old_old_fval)
  File "../../algos/types/helpers.py", line 17, in ls_wolfe12
    old_fval, old_old_fval)
  File "/ssoft/spack/paien/v2/opt/spack/linux-rhel7-x86_E5v4_Mellanox/gcc-7.3.0/python-3.6.5-fuxsuhr3v4fh4gdkw6xrvnctzn2meygg/lib/python3.6/site-packages/scipy/optimize/linesearch.py", line 101, in line_search_wolfe1
    c1=c1, c2=c2, amax=amax, amin=amin, xtol=xtol)
  File "/ssoft/spack/paien/v2/opt/spack/linux-rhel7-x86_E5v4_Mellanox/gcc-7.3.0/python-3.6.5-fuxsuhr3v4fh4gdkw6xrvnctzn2meygg/lib/python3.6/site-packages/scipy/optimize/linesearch.py", line 174, in scalar_search_wolfe1
    phi1 = phi(stp)
  File "/ssoft/spack/paien/v2/opt/spack/linux-rhel7-x86_E5v4_Mellanox/gcc-7.3.0/python-3.6.5-fuxsuhr3v4fh4gdkw6xrvnctzn2meygg/lib/python3.6/site-packages/scipy/optimize/linesearch.py", line 87, in phi
    return f(xk + s*pk, *args)
  File "../../algos/directions/Gradient.py", line 32, in f
    return self.mult * self.f(x)
  File "../../algos/directions/Direction.py", line 15, in <lambda>
    self.f = lambda x: self.biogeme.calculateLikelihood(x)
  File "/home/glederre/pybio/lib/python3.6/site-packages/biogeme/biogeme.py", line 250, in calculateLikelihood
    f = self.theC.calculateLikelihood(x,self.fixedBetaValues)
  File "src/cbiogeme.pyx", line 93, in biogeme.cbiogeme.pyBiogeme.calculateLikelihood
RuntimeError: src/biogeme.cc:296: Biogeme exception: Error for data entry 66299 : src/bioExprElem.cc:66: Biogeme exception: Invalid value for expression <(exp((((((((((((((((((((((((ASC_DRIVING_DL0[1] <66299>*dl0[363] <66299>)+(ASC_DRIVING_DL1[2] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((ASC_DRIVING_DL0[1] <66299>*dl0[363] <66299>)+(ASC_DRIVING_DL1[2] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((ASC_DRIVING_DL0[1] <66299>*dl0[363] <66299>)+(ASC_DRIVING_DL1[2] <66299>*dl1[364] <66299>))*co2[352] <66299>))+((((((B_TIME_DRIVING_NCO[85] <66299>*dl0[363] <66299>)+(B_TIME_DRIVING_NCO[85] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_TIME_DRIVING_CO1_DL0[81] <66299>*dl0[363] <66299>)+(B_TIME_DRIVING_CO1_DL1[82] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_TIME_DRIVING_CO2_DL0[83] <66299>*dl0[363] <66299>)+(B_TIME_DRIVING_CO2_DL1[84] <66299>*dl1[364] <66299>))*co2[352] <66299>))*dur_driving[309] <66299>))+((((((B_COST_CON_NCO_DL0[151] <66299>*dl0[363] <66299>)+(B_COST_CON_NCO_DL1[152] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_COST_CON_CO[23] <66299>*dl0[363] <66299>)+(B_COST_CON_CO[23] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_COST_CON_CO[23] <66299>*dl0[363] <66299>)+(B_COST_CON_CO[23] <66299>*dl1[364] <66299>))*co2[352] <66299>))*con_charge[341] <66299>))+((((((B_COST_FUEL_NCO_DL0[156] <66299>*dl0[363] <66299>)+(B_COST_FUEL_NCO_DL1[25] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_COST_FUEL_CO1_DL0[153] <66299>*dl0[363] <66299>)+(B_COST_FUEL_CO1_DL1[154] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_COST_FUEL_CO2_DL0[155] <66299>*dl0[363] <66299>)+(B_COST_FUEL_CO2_DL1[24] <66299>*dl1[364] <66299>))*co2[352] <66299>))*cost_driving[312] <66299>))+((((((B_TRAFFIC_DL0[93] <66299>*dl0[363] <66299>)+(B_TRAFFIC_NCO1_DL1[94] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_TRAFFIC_DL0[93] <66299>*dl0[363] <66299>)+(B_TRAFFIC_NCO1_DL1[94] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_TRAFFIC_DL0[93] <66299>*dl0[363] <66299>)+(B_TRAFFIC_CO2_DL1[92] <66299>*dl1[364] <66299>))*co2[352] <66299>))*traffic_percent[313] <66299>))+((((((B_PURPOSE_B_DRIVING_NCO_DL0[207] <66299>*dl0[363] <66299>)+(B_PURPOSE_B_DRIVING_NCO_DL1[208] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_PURPOSE_B_DRIVING_CO1_DL0[205] <66299>*dl0[363] <66299>)+(B_PURPOSE_B_DRIVING_CO1_DL1[206] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_PURPOSE_B_DRIVING_CO2[54] <66299>*dl0[363] <66299>)+(B_PURPOSE_B_DRIVING_CO2[54] <66299>*dl1[364] <66299>))*co2[352] <66299>))*purpose_B[342] <66299>))+((((((B_PURPOSE_HBW_DRIVING_NCO[69] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBW_DRIVING_NCO[69] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_PURPOSE_HBW_DRIVING_CO1_DL0[67] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBW_DRIVING_CO1_DL1[68] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_PURPOSE_HBW_DRIVING_CO2_DL0[244] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBW_DRIVING_CO2_DL1[245] <66299>*dl1[364] <66299>))*co2[352] <66299>))*purpose_HBW[328] <66299>))+((((((B_PURPOSE_HBE_DRIVING_NCO[59] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBE_DRIVING_NCO[59] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_PURPOSE_HBE_DRIVING_CO_DL0[58] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBE_DRIVING_CO1_DL1[57] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_PURPOSE_HBE_DRIVING_CO_DL0[58] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBE_DRIVING_CO2_DL1[217] <66299>*dl1[364] <66299>))*co2[352] <66299>))*purpose_HBE[326] <66299>))+((((((B_PURPOSE_HBO_DRIVING_NCO_DL0[230] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBO_DRIVING_NCO_DL1[231] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_PURPOSE_HBO_DRIVING_CO_DL0[229] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBO_DRIVING_CO_DL1[63] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_PURPOSE_HBO_DRIVING_CO_DL0[229] <66299>*dl0[363] <66299>)+(B_PURPOSE_HBO_DRIVING_CO_DL1[63] <66299>*dl1[364] <66299>))*co2[352] <66299>))*purpose_HBO[327] <66299>))+((((((B_FEMALE_DRIVING_DL0[37] <66299>*dl0[363] <66299>)+(B_FEMALE_DRIVING_NCO_DL1[168] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_FEMALE_DRIVING_DL0[37] <66299>*dl0[363] <66299>)+(B_FEMALE_DRIVING_CO_DL1[167] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_FEMALE_DRIVING_DL0[37] <66299>*dl0[363] <66299>)+(B_FEMALE_DRIVING_CO_DL1[167] <66299>*dl1[364] <66299>))*co2[352] <66299>))*female[318] <66299>))+((((((B_WINTER_DRIVING_NCO_DL0[291] <66299>*dl0[363] <66299>)+(B_WINTER_DRIVING_NCO_DL1[292] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_WINTER_DRIVING_CO[99] <66299>*dl0[363] <66299>)+(B_WINTER_DRIVING_CO[99] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_WINTER_DRIVING_CO[99] <66299>*dl0[363] <66299>)+(B_WINTER_DRIVING_CO[99] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.winter[358] <66299>))+((((((B_CHILD_DRIVING_NCO_DL0[21] <66299>*dl0[363] <66299>)+(B_CHILD_DRIVING_NCO_DL1[139] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_CHILD_DRIVING_CO1_DL0[19] <66299>*dl0[363] <66299>)+(B_CHILD_DRIVING_CO1_DL1[137] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_CHILD_DRIVING_CO2_DL0[20] <66299>*dl0[363] <66299>)+(B_CHILD_DRIVING_CO2_DL1[138] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.child[355] <66299>))+((((((B_CADULT_DRIVING_NCO2_DL0[121] <66299>*dl0[363] <66299>)+(B_CADULT_DRIVING_NCO2_DL1[15] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_CADULT_DRIVING_CO1_DL0[13] <66299>*dl0[363] <66299>)+(B_CADULT_DRIVING_CO1_DL1[14] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_CADULT_DRIVING_NCO2_DL0[121] <66299>*dl0[363] <66299>)+(B_CADULT_DRIVING_NCO2_DL1[15] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.cadult[356] <66299>))+((((((B_ADULT_DRIVING_NCO_DL0[7] <66299>*dl0[363] <66299>)+(B_ADULT_DRIVING_NCO_DL1[8] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_ADULT_DRIVING_CO1_DL0[109] <66299>*dl0[363] <66299>)+(B_ADULT_DRIVING_CO1_DL1[110] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_ADULT_DRIVING_CO2_DL0[111] <66299>*dl0[363] <66299>)+(B_ADULT_DRIVING_CO2_DL1[6] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.adult[357] <66299>))+((((((B_WEEKDAY_DRIVING_NCO1_DL0[95] <66299>*dl0[363] <66299>)+(B_WEEKDAY_DRIVING_NCO1_DL1[96] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_WEEKDAY_DRIVING_NCO1_DL0[95] <66299>*dl0[363] <66299>)+(B_WEEKDAY_DRIVING_NCO1_DL1[96] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_WEEKDAY_DRIVING_CO2_DL0[278] <66299>*dl0[363] <66299>)+(B_WEEKDAY_DRIVING_CO2_DL1[279] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.weekday[353] <66299>))+((((((B_INTER_PEAK_DRIVING_NCO_DL0[181] <66299>*dl0[363] <66299>)+(B_INTER_PEAK_DRIVING_NCO_DL1[182] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_INTER_PEAK_DRIVING_CO1_DL0[179] <66299>*dl0[363] <66299>)+(B_INTER_PEAK_DRIVING_CO1_DL1[180] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_INTER_PEAK_DRIVING_CO2_DL0[40] <66299>*dl0[363] <66299>)+(B_INTER_PEAK_DRIVING_CO2_DL1[41] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.interpeak[360] <66299>))+((((((B_PM_PEAK_DRIVING_DL0[50] <66299>*dl0[363] <66299>)+(B_PM_PEAK_DRIVING_DL1[51] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_PM_PEAK_DRIVING_DL0[50] <66299>*dl0[363] <66299>)+(B_PM_PEAK_DRIVING_DL1[51] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_PM_PEAK_DRIVING_DL0[50] <66299>*dl0[363] <66299>)+(B_PM_PEAK_DRIVING_DL1[51] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.pmpeak[359] <66299>))+((((((B_DISTANCE_DRIVING_NCO_DL0[32] <66299>*dl0[363] <66299>)+(B_DISTANCE_DRIVING_DL1[31] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_DISTANCE_DRIVING_CO_DL0[30] <66299>*dl0[363] <66299>)+(B_DISTANCE_DRIVING_DL1[31] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_DISTANCE_DRIVING_CO_DL0[30] <66299>*dl0[363] <66299>)+(B_DISTANCE_DRIVING_DL1[31] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.distance_km[361] <66299>))+((((((B_LOGDISTANCE_DRIVING_NCO_DL0[45] <66299>*dl0[363] <66299>)+(B_LOGDISTANCE_DRIVING_NCO_DL1[46] <66299>*dl1[364] <66299>))*co0[350] <66299>)+(((B_LOGDISTANCE_DRIVING_CO_DL0[43] <66299>*dl0[363] <66299>)+(B_LOGDISTANCE_DRIVING_CO_DL1[44] <66299>*dl1[364] <66299>))*co1[351] <66299>))+(((B_LOGDISTANCE_DRIVING_CO_DL0[43] <66299>*dl0[363] <66299>)+(B_LOGDISTANCE_DRIVING_CO_DL1[44] <66299>*dl1[364] <66299>))*co2[352] <66299>))*self.logdistance[362] <66299>)))^1)>: inf
srun: error: h231: task 0: Exited with exit code 1
srun: Terminating job step 178430.0
Finished at lun ao√ª 12 23:11:54 CEST 2019
